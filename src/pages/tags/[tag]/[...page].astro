---
import PageLayout from "@/layouts/Base";
import { getAllTags, sortMDByDate } from "@/util";
import type { MDXInstance, Page, ContentItem } from "@/types";
import TagsBar from "@/components/TagsBar";
import ContentPreview from "@/components/ContentPreview";

const allProjects = await Astro.glob<ContentItem>("../../projects/*.mdx");
const allPosts = await Astro.glob<ContentItem>("../../posts/*.mdx");
const allTags = getAllTags(allProjects.concat(allPosts));

export async function getStaticPaths({ paginate }) {
	const allProjects = await Astro.glob<ContentItem>("../../projects/*.mdx");
	const allPosts = await Astro.glob<ContentItem>("../../posts/*.mdx");
	const allProjectsByDate = sortMDByDate(allProjects);
	const allPostsByDate = sortMDByDate(allPosts);
	const allContent = allProjectsByDate.concat(allPostsByDate);
	const allTags = getAllTags(allProjectsByDate.concat(allPostsByDate));

	return allTags.map((tag) => {
		console.log("tag", allContent);
		const filterPosts = allContent.filter((post) =>
			post.frontmatter.tags?.includes(tag)
		);
		return paginate(filterPosts, {
			params: { tag },
			pageSize: 10,
		});
	});
}

export interface Props {
	page: Page<MDXInstance<ContentItem>>;
	allTags: string[];
}

const { page } = Astro.props as Props;
const { tag } = Astro.params;

console.log("page", page);

const meta = {
	title: `Tag: ${tag}`,
	description: `View all posts and projects tagged with ${tag}`,
};
---

<PageLayout meta={meta}>
	<h1 class="flex items-center mb-6 title">
		Tag: {tag}
	</h1>
	<div class="grid gap-y-16 sm:grid-cols-[3fr_1fr] sm:gap-x-8">
		<section aria-label="Blog post list">
			<ul class="text-left space-y-8">
				{
					page.data.map((p) => (
						<li class="[&_q]:w-full flex flex-wrap items-center gap-x-2">
							<ContentPreview contentItem={p} as="h2" withDesc />
						</li>
					))
				}
			</ul>
		</section>
		<TagsBar allTags={allTags} />
	</div>
</PageLayout>
